// <auto-generated />
using ContactService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ContactService.Migrations
{
    [DbContext(typeof(PhoneBookContext))]
    [Migration("20220109164348_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ContactService.Models.ContactInfo", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("InfoDetail")
                        .HasColumnType("text");

                    b.Property<int>("InfoType")
                        .HasColumnType("integer");

                    b.Property<string>("PersonUID")
                        .HasColumnType("text");

                    b.HasKey("ContactID");

                    b.HasIndex("PersonUID");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("ContactService.Models.Person", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("UID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ContactService.Models.ContactInfo", b =>
                {
                    b.HasOne("ContactService.Models.Person", null)
                        .WithMany("ContactInfos")
                        .HasForeignKey("PersonUID");
                });

            modelBuilder.Entity("ContactService.Models.Person", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
